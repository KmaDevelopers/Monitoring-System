<?php
class StatisticsController extends KmaController {
    /**
     * Specifies the access control rules.
     * This method is used by the 'accessControl' filter.
     * @return array access control rules
     */
    public function accessRules() {
	return array(array('allow', // allow all users to perform 'index' and 'view' actions
	'actions' => array('list',), 'users' => array('*'),), array('deny', // deny all users
	'users' => array('*'),),);
    }
    public function actionList() {
	$sesorId = $_REQUEST['id'] ? : false;
	/**
	 *sort = datetime
	 *order = desc
	 *page = 2
	 *size = 20
	 *start = 50
	 */
	
	/**
	 *@todo CREATE CDBCRITERIA
	 */
	
	if(!empty($_GET)) {
		
		$sort = isset($_GET['sort']) ? $_GET['sort'] : false;
		$order = isset($_GET['dir']) ? $_GET['dir'] : false;
		$size = isset($_GET['limit']) ? (int) $_GET['limit'] : 25; // default page size
		$page =  isset($_GET['page']) ? (int) $_GET['page']: 0;
		$start = isset($_GET['start']) ? (int) $_GET['start'] : 0;
		
		$conf = array('limit' => $size , 'offset' => $start);
		
		if($sort) {
			$conf = array_merge($conf,array('order' => $sort." ".$order ? : 'ASC'));
		}
		
	}
	
	$sen = Sensor::model()->findByPk($sesorId);
	
	if ($sen) {
	    list($items, $count) = Statistics::getStatisticBySensorId($sesorId, $conf);
	    $this->result($items, $count);
	} else {
	    $this->error("Sensor not available!");
	}
    }
}
